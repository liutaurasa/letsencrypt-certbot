---
# tasks file for letsencrypt-certbot
- name: Install certbot
  include_tasks:
    file: "{{ ansible_os_family }}_install.yaml"

- name: "Certbot | Get plugin TLS settings |"
  copy:
    src: current_options_ssl_apache.conf
    dest: "/etc/letsencrypt/options-ssl-{{ _certbot_plugin }}.conf"
    owner: root
    group: root
    mode: '0644'
  when: _certbot_plugin is defined

- name: "Certbot | Create hooks | Post"
  template:
    src: "certbot-hooks/{{ _hook.name }}.j2"
    dest: "/etc/letsencrypt/renewal-hooks/{{ _hook.type }}/{{ _hook.name }}"
    owner: root
    group: root
    mode: '0755'
  loop: "{{ certbot_hooks | default([]) }}"
  loop_control:
    loop_var: _hook

- name: "Open Firewalld |"
  firewalld:
    service: http
    state: enabled
    immediate: True

- name: "Certbot | Get installed certbot certificates |"
  shell:
    cmd: "certbot certificates 2>/dev/null | grep 'Certificate Name' | awk -F': ' '{print $2}'"
  register: _installed_letsencrypt_certs
  ignore_errors: "{{ ansible_check_mode }}"
  check_mode: no
  changed_when: False

- name: "Letsencrypt certificates | Run certbot |"
  block:
    - name: "Stop Webserver |"
      service:
        name: "{{ _webservice }}"
        state: stopped
    
    - name: "Install certbot certificates |"
      shell:
        cmd: >-
          certbot certonly
          --standalone
          --domain {{ _domain.name }} {{ _domain.aliases | default([]) | join( ' ') }}
          --noninteractive
          --register
          --email {{ certbot_email | default('liutauras.adomaitis@infosaitas.lt') }}
          --agree-tos {{ '--test-cert' if certbot_test | default(True) else ''}}
      loop: "{{ _domains }}"
      loop_control:
        loop_var: _domain
      when: _domain.name not in _installed_letsencrypt_certs.stdout_lines
  always:
    - name: "Start Webserver |"
      service:
        name: "{{ _webservice }}"
        state: started
  when: _domains | map(attribute='name') | difference(_installed_letsencrypt_certs.stdout_lines) | length > 0

- name: "Enable certbot systemd service"
  service:
    name: "certbot-renew.service"
    enabled: True

- name: "Enable certbot systemd timer"
  service:
    name: "certbot-renew.timer"
    enabled: True
    state: started
