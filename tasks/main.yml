---
# tasks file for letsencrypt-certbot
- name: Let's Encrypt | Install certbot |
  import_tasks: install.yml
  tags:
    - packages

- block:
    - name: Get Let's Encrypt Account
      command:
        cmd: /usr/bin/certbot show_account
      changed_when: False
      check_mode: False
      when: _certbot_version['stdout'].split(' ')[1] is version('2', '>=')

    - name: Get Let's Encrypt account traces
      find:
        paths: /etc/letsencrypt/accounts
        patterns: "*.json"
        recurse: True
      register: _account_jsons_found
      changed_when: False
      failed_when: _account_jsons_found['files'] | length == 0
      when: _certbot_version['stdout'].split(' ')[1] is version('2', '<')
  rescue:
    - name: Create Let's Encrypt Account
      command:
        cmd: /usr/bin/certbot register --agree-tos -m {{ certbot_account['email'] | default('liutauras.adomaitis@gmail.com') }}
  tags:
    - certbot

- name: "Let's Encrypt hooks"
  template:
    src: "certbot-hooks/{{ _hook['name'] }}.j2"
    dest: "/etc/letsencrypt/renewal-hooks/{{ _hook['type'] }}/{{ _hook['name'] }}"
    owner: root
    group: root
    mode: '0755'
  loop: "{{ certbot_hooks | default([]) }}"
  loop_control:
    loop_var: _hook
  tags:
    - certbot

- name: Let's Encrypt certificates parser script
  copy:
    src: files/certbot-certificates-to-json.sh
    dest: /usr/local/bin/certbot-certificates-to-json.awk
    owner: root
    group: root
    mode: "0755"
  tags:
    - certbot

- name: "Let's Encrypt | Enable certbot systemd service"
  service:
    name: "{{ certbot[ansible_os_family]['service'] }}"
    enabled: True
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
    - certbot

- name: "Enable Certbot timer"
  service:
    name: "{{ certbot[ansible_os_family]['timer'] }}"
    enabled: True
    state: started
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
    - certbot
